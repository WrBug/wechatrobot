package cn.mandroid.wechatrobot.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import cn.mandroid.wechatrobot.model.entity.dao.WechatUserBean;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "WECHAT_USER_BEAN".
*/
public class WechatUserBeanDao extends AbstractDao<WechatUserBean, String> {

    public static final String TABLENAME = "WECHAT_USER_BEAN";

    /**
     * Properties of entity WechatUserBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property UserName = new Property(0, String.class, "UserName", true, "USER_NAME");
        public final static Property WebWxPluginSwitch = new Property(1, long.class, "WebWxPluginSwitch", false, "WEB_WX_PLUGIN_SWITCH");
        public final static Property HeadImgFlag = new Property(2, long.class, "HeadImgFlag", false, "HEAD_IMG_FLAG");
        public final static Property Uin = new Property(3, long.class, "Uin", false, "UIN");
        public final static Property NickName = new Property(4, String.class, "NickName", false, "NICK_NAME");
        public final static Property HeadImgUrl = new Property(5, String.class, "HeadImgUrl", false, "HEAD_IMG_URL");
        public final static Property ContactFlag = new Property(6, long.class, "ContactFlag", false, "CONTACT_FLAG");
        public final static Property MemberCount = new Property(7, long.class, "MemberCount", false, "MEMBER_COUNT");
        public final static Property RemarkName = new Property(8, String.class, "RemarkName", false, "REMARK_NAME");
        public final static Property HideInputBarFlag = new Property(9, long.class, "HideInputBarFlag", false, "HIDE_INPUT_BAR_FLAG");
        public final static Property Sex = new Property(10, long.class, "Sex", false, "SEX");
        public final static Property Signature = new Property(11, String.class, "Signature", false, "SIGNATURE");
        public final static Property VerifyFlag = new Property(12, long.class, "VerifyFlag", false, "VERIFY_FLAG");
        public final static Property OwnerUin = new Property(13, long.class, "OwnerUin", false, "OWNER_UIN");
        public final static Property PYInitial = new Property(14, String.class, "PYInitial", false, "PYINITIAL");
        public final static Property PYQuanPin = new Property(15, String.class, "PYQuanPin", false, "PYQUAN_PIN");
        public final static Property RemarkPYInitial = new Property(16, String.class, "RemarkPYInitial", false, "REMARK_PYINITIAL");
        public final static Property RemarkPYQuanPin = new Property(17, String.class, "RemarkPYQuanPin", false, "REMARK_PYQUAN_PIN");
        public final static Property StarFriend = new Property(18, long.class, "StarFriend", false, "STAR_FRIEND");
        public final static Property AppAccountFlag = new Property(19, long.class, "AppAccountFlag", false, "APP_ACCOUNT_FLAG");
        public final static Property Statues = new Property(20, long.class, "Statues", false, "STATUES");
        public final static Property AttrStatus = new Property(21, long.class, "AttrStatus", false, "ATTR_STATUS");
        public final static Property Province = new Property(22, String.class, "Province", false, "PROVINCE");
        public final static Property City = new Property(23, String.class, "City", false, "CITY");
        public final static Property Alias = new Property(24, String.class, "Alias", false, "ALIAS");
        public final static Property SnsFlag = new Property(25, long.class, "SnsFlag", false, "SNS_FLAG");
        public final static Property UniFriend = new Property(26, long.class, "UniFriend", false, "UNI_FRIEND");
        public final static Property DisplayName = new Property(27, String.class, "DisplayName", false, "DISPLAY_NAME");
        public final static Property ChatRoomId = new Property(28, long.class, "ChatRoomId", false, "CHAT_ROOM_ID");
        public final static Property KeyWord = new Property(29, String.class, "KeyWord", false, "KEY_WORD");
        public final static Property EncryChatRoomId = new Property(30, String.class, "EncryChatRoomId", false, "ENCRY_CHAT_ROOM_ID");
    }


    public WechatUserBeanDao(DaoConfig config) {
        super(config);
    }
    
    public WechatUserBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"WECHAT_USER_BEAN\" (" + //
                "\"USER_NAME\" TEXT PRIMARY KEY NOT NULL UNIQUE ," + // 0: UserName
                "\"WEB_WX_PLUGIN_SWITCH\" INTEGER NOT NULL ," + // 1: WebWxPluginSwitch
                "\"HEAD_IMG_FLAG\" INTEGER NOT NULL ," + // 2: HeadImgFlag
                "\"UIN\" INTEGER NOT NULL ," + // 3: Uin
                "\"NICK_NAME\" TEXT," + // 4: NickName
                "\"HEAD_IMG_URL\" TEXT," + // 5: HeadImgUrl
                "\"CONTACT_FLAG\" INTEGER NOT NULL ," + // 6: ContactFlag
                "\"MEMBER_COUNT\" INTEGER NOT NULL ," + // 7: MemberCount
                "\"REMARK_NAME\" TEXT," + // 8: RemarkName
                "\"HIDE_INPUT_BAR_FLAG\" INTEGER NOT NULL ," + // 9: HideInputBarFlag
                "\"SEX\" INTEGER NOT NULL ," + // 10: Sex
                "\"SIGNATURE\" TEXT," + // 11: Signature
                "\"VERIFY_FLAG\" INTEGER NOT NULL ," + // 12: VerifyFlag
                "\"OWNER_UIN\" INTEGER NOT NULL ," + // 13: OwnerUin
                "\"PYINITIAL\" TEXT," + // 14: PYInitial
                "\"PYQUAN_PIN\" TEXT," + // 15: PYQuanPin
                "\"REMARK_PYINITIAL\" TEXT," + // 16: RemarkPYInitial
                "\"REMARK_PYQUAN_PIN\" TEXT," + // 17: RemarkPYQuanPin
                "\"STAR_FRIEND\" INTEGER NOT NULL ," + // 18: StarFriend
                "\"APP_ACCOUNT_FLAG\" INTEGER NOT NULL ," + // 19: AppAccountFlag
                "\"STATUES\" INTEGER NOT NULL ," + // 20: Statues
                "\"ATTR_STATUS\" INTEGER NOT NULL ," + // 21: AttrStatus
                "\"PROVINCE\" TEXT," + // 22: Province
                "\"CITY\" TEXT," + // 23: City
                "\"ALIAS\" TEXT," + // 24: Alias
                "\"SNS_FLAG\" INTEGER NOT NULL ," + // 25: SnsFlag
                "\"UNI_FRIEND\" INTEGER NOT NULL ," + // 26: UniFriend
                "\"DISPLAY_NAME\" TEXT," + // 27: DisplayName
                "\"CHAT_ROOM_ID\" INTEGER NOT NULL ," + // 28: ChatRoomId
                "\"KEY_WORD\" TEXT," + // 29: KeyWord
                "\"ENCRY_CHAT_ROOM_ID\" TEXT);"); // 30: EncryChatRoomId
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"WECHAT_USER_BEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, WechatUserBean entity) {
        stmt.clearBindings();
 
        String UserName = entity.getUserName();
        if (UserName != null) {
            stmt.bindString(1, UserName);
        }
        stmt.bindLong(2, entity.getWebWxPluginSwitch());
        stmt.bindLong(3, entity.getHeadImgFlag());
        stmt.bindLong(4, entity.getUin());
 
        String NickName = entity.getNickName();
        if (NickName != null) {
            stmt.bindString(5, NickName);
        }
 
        String HeadImgUrl = entity.getHeadImgUrl();
        if (HeadImgUrl != null) {
            stmt.bindString(6, HeadImgUrl);
        }
        stmt.bindLong(7, entity.getContactFlag());
        stmt.bindLong(8, entity.getMemberCount());
 
        String RemarkName = entity.getRemarkName();
        if (RemarkName != null) {
            stmt.bindString(9, RemarkName);
        }
        stmt.bindLong(10, entity.getHideInputBarFlag());
        stmt.bindLong(11, entity.getSex());
 
        String Signature = entity.getSignature();
        if (Signature != null) {
            stmt.bindString(12, Signature);
        }
        stmt.bindLong(13, entity.getVerifyFlag());
        stmt.bindLong(14, entity.getOwnerUin());
 
        String PYInitial = entity.getPYInitial();
        if (PYInitial != null) {
            stmt.bindString(15, PYInitial);
        }
 
        String PYQuanPin = entity.getPYQuanPin();
        if (PYQuanPin != null) {
            stmt.bindString(16, PYQuanPin);
        }
 
        String RemarkPYInitial = entity.getRemarkPYInitial();
        if (RemarkPYInitial != null) {
            stmt.bindString(17, RemarkPYInitial);
        }
 
        String RemarkPYQuanPin = entity.getRemarkPYQuanPin();
        if (RemarkPYQuanPin != null) {
            stmt.bindString(18, RemarkPYQuanPin);
        }
        stmt.bindLong(19, entity.getStarFriend());
        stmt.bindLong(20, entity.getAppAccountFlag());
        stmt.bindLong(21, entity.getStatues());
        stmt.bindLong(22, entity.getAttrStatus());
 
        String Province = entity.getProvince();
        if (Province != null) {
            stmt.bindString(23, Province);
        }
 
        String City = entity.getCity();
        if (City != null) {
            stmt.bindString(24, City);
        }
 
        String Alias = entity.getAlias();
        if (Alias != null) {
            stmt.bindString(25, Alias);
        }
        stmt.bindLong(26, entity.getSnsFlag());
        stmt.bindLong(27, entity.getUniFriend());
 
        String DisplayName = entity.getDisplayName();
        if (DisplayName != null) {
            stmt.bindString(28, DisplayName);
        }
        stmt.bindLong(29, entity.getChatRoomId());
 
        String KeyWord = entity.getKeyWord();
        if (KeyWord != null) {
            stmt.bindString(30, KeyWord);
        }
 
        String EncryChatRoomId = entity.getEncryChatRoomId();
        if (EncryChatRoomId != null) {
            stmt.bindString(31, EncryChatRoomId);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, WechatUserBean entity) {
        stmt.clearBindings();
 
        String UserName = entity.getUserName();
        if (UserName != null) {
            stmt.bindString(1, UserName);
        }
        stmt.bindLong(2, entity.getWebWxPluginSwitch());
        stmt.bindLong(3, entity.getHeadImgFlag());
        stmt.bindLong(4, entity.getUin());
 
        String NickName = entity.getNickName();
        if (NickName != null) {
            stmt.bindString(5, NickName);
        }
 
        String HeadImgUrl = entity.getHeadImgUrl();
        if (HeadImgUrl != null) {
            stmt.bindString(6, HeadImgUrl);
        }
        stmt.bindLong(7, entity.getContactFlag());
        stmt.bindLong(8, entity.getMemberCount());
 
        String RemarkName = entity.getRemarkName();
        if (RemarkName != null) {
            stmt.bindString(9, RemarkName);
        }
        stmt.bindLong(10, entity.getHideInputBarFlag());
        stmt.bindLong(11, entity.getSex());
 
        String Signature = entity.getSignature();
        if (Signature != null) {
            stmt.bindString(12, Signature);
        }
        stmt.bindLong(13, entity.getVerifyFlag());
        stmt.bindLong(14, entity.getOwnerUin());
 
        String PYInitial = entity.getPYInitial();
        if (PYInitial != null) {
            stmt.bindString(15, PYInitial);
        }
 
        String PYQuanPin = entity.getPYQuanPin();
        if (PYQuanPin != null) {
            stmt.bindString(16, PYQuanPin);
        }
 
        String RemarkPYInitial = entity.getRemarkPYInitial();
        if (RemarkPYInitial != null) {
            stmt.bindString(17, RemarkPYInitial);
        }
 
        String RemarkPYQuanPin = entity.getRemarkPYQuanPin();
        if (RemarkPYQuanPin != null) {
            stmt.bindString(18, RemarkPYQuanPin);
        }
        stmt.bindLong(19, entity.getStarFriend());
        stmt.bindLong(20, entity.getAppAccountFlag());
        stmt.bindLong(21, entity.getStatues());
        stmt.bindLong(22, entity.getAttrStatus());
 
        String Province = entity.getProvince();
        if (Province != null) {
            stmt.bindString(23, Province);
        }
 
        String City = entity.getCity();
        if (City != null) {
            stmt.bindString(24, City);
        }
 
        String Alias = entity.getAlias();
        if (Alias != null) {
            stmt.bindString(25, Alias);
        }
        stmt.bindLong(26, entity.getSnsFlag());
        stmt.bindLong(27, entity.getUniFriend());
 
        String DisplayName = entity.getDisplayName();
        if (DisplayName != null) {
            stmt.bindString(28, DisplayName);
        }
        stmt.bindLong(29, entity.getChatRoomId());
 
        String KeyWord = entity.getKeyWord();
        if (KeyWord != null) {
            stmt.bindString(30, KeyWord);
        }
 
        String EncryChatRoomId = entity.getEncryChatRoomId();
        if (EncryChatRoomId != null) {
            stmt.bindString(31, EncryChatRoomId);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public WechatUserBean readEntity(Cursor cursor, int offset) {
        WechatUserBean entity = new WechatUserBean( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // UserName
            cursor.getLong(offset + 1), // WebWxPluginSwitch
            cursor.getLong(offset + 2), // HeadImgFlag
            cursor.getLong(offset + 3), // Uin
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // NickName
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // HeadImgUrl
            cursor.getLong(offset + 6), // ContactFlag
            cursor.getLong(offset + 7), // MemberCount
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // RemarkName
            cursor.getLong(offset + 9), // HideInputBarFlag
            cursor.getLong(offset + 10), // Sex
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // Signature
            cursor.getLong(offset + 12), // VerifyFlag
            cursor.getLong(offset + 13), // OwnerUin
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // PYInitial
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // PYQuanPin
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // RemarkPYInitial
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // RemarkPYQuanPin
            cursor.getLong(offset + 18), // StarFriend
            cursor.getLong(offset + 19), // AppAccountFlag
            cursor.getLong(offset + 20), // Statues
            cursor.getLong(offset + 21), // AttrStatus
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // Province
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // City
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // Alias
            cursor.getLong(offset + 25), // SnsFlag
            cursor.getLong(offset + 26), // UniFriend
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // DisplayName
            cursor.getLong(offset + 28), // ChatRoomId
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // KeyWord
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30) // EncryChatRoomId
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, WechatUserBean entity, int offset) {
        entity.setUserName(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setWebWxPluginSwitch(cursor.getLong(offset + 1));
        entity.setHeadImgFlag(cursor.getLong(offset + 2));
        entity.setUin(cursor.getLong(offset + 3));
        entity.setNickName(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setHeadImgUrl(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setContactFlag(cursor.getLong(offset + 6));
        entity.setMemberCount(cursor.getLong(offset + 7));
        entity.setRemarkName(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setHideInputBarFlag(cursor.getLong(offset + 9));
        entity.setSex(cursor.getLong(offset + 10));
        entity.setSignature(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setVerifyFlag(cursor.getLong(offset + 12));
        entity.setOwnerUin(cursor.getLong(offset + 13));
        entity.setPYInitial(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setPYQuanPin(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setRemarkPYInitial(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setRemarkPYQuanPin(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setStarFriend(cursor.getLong(offset + 18));
        entity.setAppAccountFlag(cursor.getLong(offset + 19));
        entity.setStatues(cursor.getLong(offset + 20));
        entity.setAttrStatus(cursor.getLong(offset + 21));
        entity.setProvince(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setCity(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setAlias(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setSnsFlag(cursor.getLong(offset + 25));
        entity.setUniFriend(cursor.getLong(offset + 26));
        entity.setDisplayName(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setChatRoomId(cursor.getLong(offset + 28));
        entity.setKeyWord(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setEncryChatRoomId(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
     }
    
    @Override
    protected final String updateKeyAfterInsert(WechatUserBean entity, long rowId) {
        return entity.getUserName();
    }
    
    @Override
    public String getKey(WechatUserBean entity) {
        if(entity != null) {
            return entity.getUserName();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(WechatUserBean entity) {
        return entity.getUserName() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
